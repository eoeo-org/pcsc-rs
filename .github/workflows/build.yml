name: build
on: 
  push:
    branches:
      - 'main'
  pull_request:
  release:
    types: [published]

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl]
        use-cross: [true]
        include:
          - target: x86_64-unknown-linux-gnu
            use-cross: false
          - target: x86_64-unknown-linux-musl
            use-cross: false
          - os: macos-12
            target: aarch64-apple-darwin
          - os: macos-12
            target: x86_64-apple-darwin
          - os: windows-2022
            target: x86_64-pc-windows-msvc
          - os: windows-2022
            target: x86_64-pc-windows-gnu
    runs-on: ${{ matrix.os || 'ubuntu-22.04'}}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_REPO: ${{ github.repository }}
    defaults:
      run:
        shell: bash -xe {0}
    steps:
      - name: Install musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get install -y musl-tools --no-install-recommends
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@dd05243424bd5c0e585e4b55eb2d7615cdd32f1f # v2.5.1
        with:
          key: ${{ matrix.target }}
      - name: Install cross
        if: ${{ !matrix.os && matrix.use-cross }}
        uses: taiki-e/install-action@32827a2a5edd3aeed85d1606ed4c7716b8b3bfaa # v2.12.23
        with:
          tool: cross
      - run: ${{ (!matrix.os && matrix.use-cross) && 'cross' || 'cargo' }} build --locked --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/pcsc-rs
            target/${{ matrix.target }}/release/pcsc-rs.exe
      - name: Upload to release
        if: github.event_name == 'release'
        working-directory: target/${{ matrix.target }}/release/
        run: |
          if [ -e pcsc-rs.exe ]; then
            filename="pcsc-rs-${{ github.event.release.tag_name }}-${{ matrix.target }}.exe"
            mv pcsc-rs.exe "$filename"
            gh release upload ${{ github.event.release.tag_name }} "$filename"#${{ matrix.target }} --clobber
          else
            filename="pcsc-rs-${{ github.event.release.tag_name }}-${{ matrix.target }}"
            mv pcsc-rs "$filename"
            gh release upload ${{ github.event.release.tag_name }} "$filename"#${{ matrix.target }} --clobber
          fi
