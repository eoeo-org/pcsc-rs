name: build
on:
  push:
    branches:
      - 'main'
  pull_request:
  pull_request_review:
  workflow_call:
    inputs:
      tag-name:
        required: true
        type: string

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl]
        use-cross: [true]
        include:
          - target: x86_64-unknown-linux-gnu
            use-cross: false
          - target: x86_64-unknown-linux-musl
            use-cross: false
          - os: macos-12
            target: aarch64-apple-darwin
          - os: macos-12
            target: x86_64-apple-darwin
          - os: windows-2022
            target: x86_64-pc-windows-msvc
          - os: windows-2022
            target: x86_64-pc-windows-gnu
    runs-on: ${{ matrix.os || 'ubuntu-22.04'}}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_REPO: ${{ github.repository }}
    defaults:
      run:
        shell: bash -xe {0}
    steps:
      - name: Install musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get install -y musl-tools --no-install-recommends
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@a22603398250b864f7190077025cf752307154dc # v2.7.2
        with:
          key: ${{ matrix.target }}
      - name: Install cross
        if: ${{ !matrix.os && matrix.use-cross }}
        uses: taiki-e/install-action@681c09da0e1063a389bc0f4cfa913bfdfdaf0a4d # v2.24.4
        with:
          tool: cross
      - run: ${{ (!matrix.os && matrix.use-cross) && 'cross' || 'cargo' }} build --locked --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@1eb3cb2b3e0f29609092a73eb033bb759a334595 # v4.1.0
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/pcsc-rs
            target/${{ matrix.target }}/release/pcsc-rs.exe
      - name: Upload to release
        if: ${{ inputs.tag-name }}
        working-directory: target/${{ matrix.target }}/release/
        run: |
          if [ -e pcsc-rs.exe ]; then
            filename="pcsc-rs-${{ inputs.tag-name }}-${{ matrix.target }}.exe"
            mv pcsc-rs.exe "$filename"
            gh release upload ${{ inputs.tag-name }} "$filename"#${{ matrix.target }} --clobber
          else
            filename="pcsc-rs-${{ inputs.tag-name }}-${{ matrix.target }}"
            mv pcsc-rs "$filename"
            gh release upload ${{ inputs.tag-name }} "$filename"#${{ matrix.target }} --clobber
          fi
